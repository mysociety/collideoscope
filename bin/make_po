#!/usr/bin/env perl

use strict;
use warnings;

use Cwd;
use File::Path qw(make_path);
use POSIX;
use FindBin;

my $fms_dir = Cwd::getcwd();
chdir("$FindBin::Bin/../");

make_path("locale/en_GB.UTF-8/LC_MESSAGES");
make_path("$fms_dir/locale/en_GB.UTF-8/LC_MESSAGES");

my $pofile = 'Smidsy';

open(MAINPO, "$fms_dir/locale/FixMyStreet.po") or die "";
open(NEWPO, ">locale/en_GB.UTF-8/LC_MESSAGES/$pofile.po") or die "";

print NEWPO "# AUTOMATICALLY GENERATED by make_po, do not edit\n";
print NEWPO "#\n";

my $buffer = "";
my $start = 0;
while(<MAINPO>) {
    if (!$start) {
        s/#, fuzzy/#/;
    }
    if (m/"Last-Translator: FULL NAME/) {
        $_ = '"Last-Translator: mysociety/bin/make_po\\n"'."\n";
    }
    if (m/"PO-Revision-Date: YEAR-MO-DA/) {
        my $time = POSIX::strftime("%Y-%m-%d %H:%M%z", localtime(time()));
        $_ = '"PO-Revision-Date: '.$time.'\\n"'."\n";
    }
    if (m/"Language-Team: LANGUAGE/) {
        $_ = '"Language-Team: mySociety\\n"'."\n";
    }
    if (m/"Plural-Forms: nplurals=/) {
        $_ = '"Plural-Forms: nplurals=2; plural=n != 1;\\n"'."\n";
    }

    if (m/^#/) {
        # comment or blank line
        print NEWPO $_;
    } elsif (m/^\s+$/) {
        # blank line
        $start = 1;
        $buffer = "";
        print NEWPO $_;
    } elsif ($start && (m/^msgstr ""/ || m/^msgstr\[0\] ""/)) {
        # start of translated text - translate English into Empty Homes language

        $buffer = translate($pofile, $buffer);

        if (m/^msgstr\[0\] ""/) {
            $buffer =~ s/^msgid "/msgstr[0] "/m;
            $buffer =~ s/^msgid_plural "/msgstr[1] "/m;
            $_ = <MAINPO>; # skip untranslated plural
        } else {
            $buffer =~ s/^msgid "/msgstr "/;
        }

        print NEWPO $buffer;
        $buffer = "";
    } else {
        # English text
        print NEWPO $_;
        $buffer .= $_;
    }

}

sub translate {
    my ($file, $s) = @_;

    $s =~ s/FixMyStreet/Collideoscope/g;

    $s =~ s/Report your problem/Adding an incident/;
    $s =~ s/\ba problem\b/an incident/g;
    $s =~ s/\bproblem\b/incident/g;
    $s =~ s/\bA Problem\b/An Incident/g;
    $s =~ s/\bProblem\b/Incident/g;
    $s =~ s/(?<!were )\bproblems\b/incidents/g; # don't want "There were incidents with your report"
    $s =~ s/\bProblems\b/Incidents/g;

    $s =~ s/\(like graffiti.*\)/ /;
    $s =~ s/(Please enter your full name).*? -/$1 -/;

    $s =~ s{We send it to the council on your behalf}
           {The details will be sent to the local highways department and/or police constabulary};
    $s =~ s/To find out what local alerts we have for you/To find out what local alerts we have in your area, council or ward/;
    $s =~ s/Local alerts/Get local reports/;
    $s =~ s/Help/FAQs/;

    return $s;
}
